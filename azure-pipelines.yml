# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
pool:
  vmImage: 'ubuntu-latest'
variables:
  - group: 'terraform-variables'
stages:
- stage: 'Dev'
  jobs:
  - job: 'Dev_Deploy'
    environment: 'Dev'
    steps:
    - checkout: self
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/terraform'
        artifact: 'terraform'
    - task: TerraformTaskV1@0
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: '98b491f4-4008-4e9a-a034-011bd5cb061c'
        backendAzureRmResourceGroupName: 'Res1'
        backendAzureRmStorageAccountName: 'storageaccount1res'
        backendAzureRmContainerName: '$logs'
        backendAzureRmKey: 'dev/terraform.tfstate'
    - task: TerraformTaskV1@0
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(Pipeline.Workspace)/terraform'
        environmentServiceNameAzureRM: 'vinaykumaroriginhubs-FrstProject-98b491f4-4008-4e9a-a034-011bd5cb061c'
        arguments:'-auto-approve'